/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */

package io.swagger.client.model

import io.swagger.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Produce (
  id: Option[Long],
  category: Option[ProduceEnums.Category],
  image: Option[String],
  name: String,
  latinName: Option[String],
  taxonomy: Option[String],
  variety: Option[Seq[Variety]],
  description: String,
  origin: Option[String],
  culture: Option[String],
  height: Option[String],
  spread: Option[String],
  sowing: Option[String],
  pruningthining: Option[String],
  watering: Option[String],
  petsdiseases: Option[String],
  harvesting: Option[String],
  collectingSeed: Option[String],
  storingSeed: Option[String],
  soilType: Option[ProduceEnums.SoilType],
  aspect: Option[ProduceEnums.Aspect],
  light: Option[ProduceEnums.Light],
  hardiness: Option[ProduceEnums.Hardiness],
  moisture: Option[ProduceEnums.Moisture],
  pH: Option[ProduceEnums.PH],
  harvestFrequency: Option[ProduceEnums.HarvestFrequency],
  calendar: Option[Seq[Calendar]],
  historicalCultivation: Option[String],
  modernCultivation: Option[String],
  tags: Option[Seq[Tag]]
) extends ApiModel

object ProduceEnums {

  type Category = Category.Value
  type SoilType = SoilType.Value
  type Aspect = Aspect.Value
  type Light = Light.Value
  type Hardiness = Hardiness.Value
  type Moisture = Moisture.Value
  type PH = PH.Value
  type HarvestFrequency = HarvestFrequency.Value
  object Category extends Enumeration {
    val Root = Value("root")
    val Fruit = Value("fruit")
    val Leafy = Value("leafy")
    val Flower = Value("flower")
  }

  object SoilType extends Enumeration {
    val AnyTypeOfSoil = Value("any type of soil")
    val Sand = Value("sand")
    val Loam = Value("loam")
  }

  object Aspect extends Enumeration {
    val AnyAspect = Value("any aspect")
    val SouthFacing = Value("south facing")
  }

  object Light extends Enumeration {
    val AnyLight = Value("any light")
    val FullSun = Value("full sun")
  }

  object Hardiness extends Enumeration {
    val AnyHardiness = Value("any hardiness")
    val Hardy = Value("hardy")
    val NotHardy = Value("not hardy")
    val UnheatedGreenhouse = Value("unheated greenhouse")
    val WinterProtection = Value("winter protection")
  }

  object Moisture extends Enumeration {
    val AnyMoisture = Value("any moisture")
    val WellDrained = Value("well drained")
  }

  object PH extends Enumeration {
    val AnyPH = Value("any pH")
    val Neutral = Value("neutral")
    val Acidic = Value("acidic")
    val Alkaline = Value("alkaline")
  }

  object HarvestFrequency extends Enumeration {
    val Annual = Value("annual")
    val Perennial = Value("perennial")
  }

}

